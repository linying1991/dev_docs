var search_data = {"index":{"searchIndex":["random","formatter","securerandom","base64()","bytes()","gen_random()","hex()","random_bytes()","urlsafe_base64()","uuid()"],"longSearchIndex":["random","random::formatter","securerandom","random::formatter#base64()","securerandom::bytes()","securerandom::gen_random()","random::formatter#hex()","random::formatter#random_bytes()","random::formatter#urlsafe_base64()","random::formatter#uuid()"],"info":[["Random","","Random.html","",""],["Random::Formatter","","Random/Formatter.html","",""],["SecureRandom","","SecureRandom.html","","<p>Secure random number generator interface.\n<p>This library is an interface to secure random number generators …\n"],["base64","Random::Formatter","Random/Formatter.html#method-i-base64","(n=nil)","<p>SecureRandom.base64 generates a random base64 string.\n<p>The argument <em>n</em> specifies the length, in bytes, of …\n"],["bytes","SecureRandom","SecureRandom.html#method-c-bytes","(n)",""],["gen_random","SecureRandom","SecureRandom.html#method-c-gen_random","(n)",""],["hex","Random::Formatter","Random/Formatter.html#method-i-hex","(n=nil)","<p>SecureRandom.hex generates a random hexadecimal string.\n<p>The argument <em>n</em> specifies the length, in bytes, …\n"],["random_bytes","Random::Formatter","Random/Formatter.html#method-i-random_bytes","(n=nil)","<p>SecureRandom.random_bytes generates a random binary string.\n<p>The argument <em>n</em> specifies the length of the …\n"],["urlsafe_base64","Random::Formatter","Random/Formatter.html#method-i-urlsafe_base64","(n=nil, padding=false)","<p>SecureRandom.urlsafe_base64 generates a random URL-safe base64 string.\n<p>The argument <em>n</em> specifies the length, …\n"],["uuid","Random::Formatter","Random/Formatter.html#method-i-uuid","()","<p>SecureRandom.uuid generates a random v4 UUID (Universally Unique\nIDentifier).\n\n<pre>require 'securerandom'\n ...</pre>\n"]]}}