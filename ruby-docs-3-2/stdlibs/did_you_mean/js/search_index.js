var search_data = {"index":{"searchIndex":["didyoumean","classnamechecker","classname","correctable","formatter","jaro","jarowinkler","keyerrorchecker","methodnamechecker","nullchecker","patternkeynamechecker","plainformatter","requirepathchecker","spellchecker","treespellchecker","variablenamechecker","verboseformatter","class_names()","correct()","correct()","correct_element()","correct_error()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","detailed_message()","dictionary_without_leaves()","dimensions()","distance()","distance()","exact_matches()","exact_matches()","fall_back_to_normal_spell_check()","find_ideas()","find_leaves()","find_suggestions()","formatter()","formatter=()","full_name()","ideas_to_paths()","message_for()","message_for()","message_for()","message_for()","message_for()","message_for()","method_names()","names_to_exclude()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalize()","original_message()","plausible_dimensions()","possible_paths()","requireables()","scopes()","spell_checker()","spell_checkers()","to_s()","tree_depth()"],"longSearchIndex":["didyoumean","didyoumean::classnamechecker","didyoumean::classnamechecker::classname","didyoumean::correctable","didyoumean::formatter","didyoumean::jaro","didyoumean::jarowinkler","didyoumean::keyerrorchecker","didyoumean::methodnamechecker","didyoumean::nullchecker","didyoumean::patternkeynamechecker","didyoumean::plainformatter","didyoumean::requirepathchecker","didyoumean::spellchecker","didyoumean::treespellchecker","didyoumean::variablenamechecker","didyoumean::verboseformatter","didyoumean::classnamechecker#class_names()","didyoumean::spellchecker#correct()","didyoumean::treespellchecker#correct()","didyoumean::treespellchecker#correct_element()","didyoumean::correct_error()","didyoumean::classnamechecker#corrections()","didyoumean::correctable#corrections()","didyoumean::keyerrorchecker#corrections()","didyoumean::methodnamechecker#corrections()","didyoumean::nullchecker#corrections()","didyoumean::patternkeynamechecker#corrections()","didyoumean::requirepathchecker#corrections()","didyoumean::variablenamechecker#corrections()","didyoumean::correctable#detailed_message()","didyoumean::treespellchecker#dictionary_without_leaves()","didyoumean::treespellchecker#dimensions()","didyoumean::jaro#distance()","didyoumean::jarowinkler#distance()","didyoumean::keyerrorchecker#exact_matches()","didyoumean::patternkeynamechecker#exact_matches()","didyoumean::treespellchecker#fall_back_to_normal_spell_check()","didyoumean::treespellchecker#find_ideas()","didyoumean::treespellchecker#find_leaves()","didyoumean::treespellchecker#find_suggestions()","didyoumean::formatter()","didyoumean::formatter=()","didyoumean::classnamechecker::classname#full_name()","didyoumean::treespellchecker#ideas_to_paths()","didyoumean::formatter::message_for()","didyoumean::formatter#message_for()","didyoumean::formatter::message_for()","didyoumean::formatter#message_for()","didyoumean::formatter::message_for()","didyoumean::formatter#message_for()","didyoumean::methodnamechecker#method_names()","didyoumean::methodnamechecker#names_to_exclude()","didyoumean::classnamechecker::new()","didyoumean::classnamechecker::classname::new()","didyoumean::keyerrorchecker::new()","didyoumean::methodnamechecker::new()","didyoumean::nullchecker::new()","didyoumean::patternkeynamechecker::new()","didyoumean::requirepathchecker::new()","didyoumean::spellchecker::new()","didyoumean::treespellchecker::new()","didyoumean::variablenamechecker::new()","didyoumean::treespellchecker#normalize()","didyoumean::correctable#original_message()","didyoumean::treespellchecker#plausible_dimensions()","didyoumean::treespellchecker#possible_paths()","didyoumean::requirepathchecker::requireables()","didyoumean::classnamechecker#scopes()","didyoumean::correctable#spell_checker()","didyoumean::spell_checkers()","didyoumean::correctable#to_s()","didyoumean::treespellchecker#tree_depth()"],"info":[["DidYouMean","","DidYouMean.html","","<p>The <code>DidYouMean</code> gem adds functionality to suggest possible method/class names upon errors such as <code>NameError</code> …\n"],["DidYouMean::ClassNameChecker","","DidYouMean/ClassNameChecker.html","",""],["DidYouMean::ClassNameChecker::ClassName","","DidYouMean/ClassNameChecker/ClassName.html","",""],["DidYouMean::Correctable","","DidYouMean/Correctable.html","",""],["DidYouMean::Formatter","","DidYouMean/Formatter.html","","<p>The <code>DidYouMean::Formatter</code> is the basic, default formatter for the gem. The formatter responds to the …\n"],["DidYouMean::Jaro","","DidYouMean/Jaro.html","",""],["DidYouMean::JaroWinkler","","DidYouMean/JaroWinkler.html","",""],["DidYouMean::KeyErrorChecker","","DidYouMean/KeyErrorChecker.html","",""],["DidYouMean::MethodNameChecker","","DidYouMean/MethodNameChecker.html","",""],["DidYouMean::NullChecker","","DidYouMean/NullChecker.html","",""],["DidYouMean::PatternKeyNameChecker","","DidYouMean/PatternKeyNameChecker.html","",""],["DidYouMean::PlainFormatter","","DidYouMean/Formatter.html","","<p>The <code>DidYouMean::Formatter</code> is the basic, default formatter for the gem. The formatter responds to the …\n"],["DidYouMean::RequirePathChecker","","DidYouMean/RequirePathChecker.html","",""],["DidYouMean::SpellChecker","","DidYouMean/SpellChecker.html","",""],["DidYouMean::TreeSpellChecker","","DidYouMean/TreeSpellChecker.html","","<p>spell checker for a dictionary that has a tree structure, see doc/tree_spell_checker_api.md\n"],["DidYouMean::VariableNameChecker","","DidYouMean/VariableNameChecker.html","",""],["DidYouMean::VerboseFormatter","","DidYouMean/Formatter.html","","<p>The <code>DidYouMean::Formatter</code> is the basic, default formatter for the gem. The formatter responds to the …\n"],["class_names","DidYouMean::ClassNameChecker","DidYouMean/ClassNameChecker.html#method-i-class_names","()",""],["correct","DidYouMean::SpellChecker","DidYouMean/SpellChecker.html#method-i-correct","(input)",""],["correct","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-correct","(input)",""],["correct_element","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-correct_element","(names, element)",""],["correct_error","DidYouMean","DidYouMean.html#method-c-correct_error","(error_class, spell_checker)","<p>Adds <code>DidYouMean</code> functionality to an error using a given spell checker\n"],["corrections","DidYouMean::ClassNameChecker","DidYouMean/ClassNameChecker.html#method-i-corrections","()",""],["corrections","DidYouMean::Correctable","DidYouMean/Correctable.html#method-i-corrections","()",""],["corrections","DidYouMean::KeyErrorChecker","DidYouMean/KeyErrorChecker.html#method-i-corrections","()",""],["corrections","DidYouMean::MethodNameChecker","DidYouMean/MethodNameChecker.html#method-i-corrections","()",""],["corrections","DidYouMean::NullChecker","DidYouMean/NullChecker.html#method-i-corrections","()",""],["corrections","DidYouMean::PatternKeyNameChecker","DidYouMean/PatternKeyNameChecker.html#method-i-corrections","()",""],["corrections","DidYouMean::RequirePathChecker","DidYouMean/RequirePathChecker.html#method-i-corrections","()",""],["corrections","DidYouMean::VariableNameChecker","DidYouMean/VariableNameChecker.html#method-i-corrections","()",""],["detailed_message","DidYouMean::Correctable","DidYouMean/Correctable.html#method-i-detailed_message","(highlight: true, did_you_mean: true, **)",""],["dictionary_without_leaves","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-dictionary_without_leaves","()",""],["dimensions","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-dimensions","()",""],["distance","DidYouMean::Jaro","DidYouMean/Jaro.html#method-i-distance","(str1, str2)",""],["distance","DidYouMean::JaroWinkler","DidYouMean/JaroWinkler.html#method-i-distance","(str1, str2)",""],["exact_matches","DidYouMean::KeyErrorChecker","DidYouMean/KeyErrorChecker.html#method-i-exact_matches","()",""],["exact_matches","DidYouMean::PatternKeyNameChecker","DidYouMean/PatternKeyNameChecker.html#method-i-exact_matches","()",""],["fall_back_to_normal_spell_check","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-fall_back_to_normal_spell_check","(input)",""],["find_ideas","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-find_ideas","(paths, leaf)",""],["find_leaves","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-find_leaves","(path)",""],["find_suggestions","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-find_suggestions","(input, plausibles)",""],["formatter","DidYouMean","DidYouMean.html#method-c-formatter","()","<p>Returns the currently set formatter. By default, it is set to <code>DidYouMean::Formatter</code>.\n"],["formatter=","DidYouMean","DidYouMean.html#method-c-formatter-3D","(formatter)","<p>Updates the primary formatter used to format the suggestions.\n"],["full_name","DidYouMean::ClassNameChecker::ClassName","DidYouMean/ClassNameChecker/ClassName.html#method-i-full_name","()",""],["ideas_to_paths","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-ideas_to_paths","(ideas, leaf, names, path)",""],["message_for","DidYouMean::Formatter","DidYouMean/Formatter.html#method-c-message_for","(corrections)","<p>Returns a human readable string that contains <code>corrections</code>. This formatter is designed to be less verbose …\n"],["message_for","DidYouMean::Formatter","DidYouMean/Formatter.html#method-i-message_for","(corrections)",""],["message_for","DidYouMean::Formatter","DidYouMean/Formatter.html#method-c-message_for","(corrections)","<p>Returns a human readable string that contains <code>corrections</code>. This formatter is designed to be less verbose …\n"],["message_for","DidYouMean::Formatter","DidYouMean/Formatter.html#method-i-message_for","(corrections)",""],["message_for","DidYouMean::Formatter","DidYouMean/Formatter.html#method-c-message_for","(corrections)","<p>Returns a human readable string that contains <code>corrections</code>. This formatter is designed to be less verbose …\n"],["message_for","DidYouMean::Formatter","DidYouMean/Formatter.html#method-i-message_for","(corrections)",""],["method_names","DidYouMean::MethodNameChecker","DidYouMean/MethodNameChecker.html#method-i-method_names","()",""],["names_to_exclude","DidYouMean::MethodNameChecker","DidYouMean/MethodNameChecker.html#method-i-names_to_exclude","()",""],["new","DidYouMean::ClassNameChecker","DidYouMean/ClassNameChecker.html#method-c-new","(exception)",""],["new","DidYouMean::ClassNameChecker::ClassName","DidYouMean/ClassNameChecker/ClassName.html#method-c-new","(name, namespace = '')",""],["new","DidYouMean::KeyErrorChecker","DidYouMean/KeyErrorChecker.html#method-c-new","(key_error)",""],["new","DidYouMean::MethodNameChecker","DidYouMean/MethodNameChecker.html#method-c-new","(exception)",""],["new","DidYouMean::NullChecker","DidYouMean/NullChecker.html#method-c-new","(*)",""],["new","DidYouMean::PatternKeyNameChecker","DidYouMean/PatternKeyNameChecker.html#method-c-new","(no_matching_pattern_key_error)",""],["new","DidYouMean::RequirePathChecker","DidYouMean/RequirePathChecker.html#method-c-new","(exception)",""],["new","DidYouMean::SpellChecker","DidYouMean/SpellChecker.html#method-c-new","(dictionary:)",""],["new","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-c-new","(dictionary:, separator: '/', augment: nil)",""],["new","DidYouMean::VariableNameChecker","DidYouMean/VariableNameChecker.html#method-c-new","(exception)",""],["normalize","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-normalize","(str)",""],["original_message","DidYouMean::Correctable","DidYouMean/Correctable.html#method-i-original_message","()","<p>just for compatibility\n"],["plausible_dimensions","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-plausible_dimensions","(input)",""],["possible_paths","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-possible_paths","(states)",""],["requireables","DidYouMean::RequirePathChecker","DidYouMean/RequirePathChecker.html#method-c-requireables","()",""],["scopes","DidYouMean::ClassNameChecker","DidYouMean/ClassNameChecker.html#method-i-scopes","()",""],["spell_checker","DidYouMean::Correctable","DidYouMean/Correctable.html#method-i-spell_checker","()",""],["spell_checkers","DidYouMean","DidYouMean.html#method-c-spell_checkers","()","<p>Returns a sharable hash map of error types and spell checker objects.\n"],["to_s","DidYouMean::Correctable","DidYouMean/Correctable.html#method-i-to_s","()",""],["tree_depth","DidYouMean::TreeSpellChecker","DidYouMean/TreeSpellChecker.html#method-i-tree_depth","()",""]]}}