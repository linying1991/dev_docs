var search_data = {"index":{"searchIndex":["openstruct","==()","[]()","[]=()","delete_field()","dig()","each_pair()","eql?()","freeze()","inspect()","new()","set_ostruct_member_value!()","to_h()","to_s()"],"longSearchIndex":["openstruct","openstruct#==()","openstruct#[]()","openstruct#[]=()","openstruct#delete_field()","openstruct#dig()","openstruct#each_pair()","openstruct#eql?()","openstruct#freeze()","openstruct#inspect()","openstruct::new()","openstruct#set_ostruct_member_value!()","openstruct#to_h()","openstruct#to_s()"],"info":[["OpenStruct","","OpenStruct.html","","<p>An OpenStruct is a data structure, similar to a Hash, that allows the definition of arbitrary attributes …\n"],["==","OpenStruct","OpenStruct.html#method-i-3D-3D","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is equal to <code>other</code> when <code>other</code> is an OpenStruct …\n"],["[]","OpenStruct","OpenStruct.html#method-i-5B-5D","(name)","<p>Returns the value of an attribute, or <code>nil</code> if there is no such attribute.\n\n<pre>require &quot;ostruct&quot;\nperson = OpenStruct.new(&quot;name&quot; ...</pre>\n"],["[]=","OpenStruct","OpenStruct.html#method-i-5B-5D-3D","(name, value)","<p>Sets the value of an attribute.\n\n<pre>require &quot;ostruct&quot;\nperson = OpenStruct.new(&quot;name&quot; =&gt; &quot;John Smith&quot;, &quot;age&quot; ...</pre>\n"],["delete_field","OpenStruct","OpenStruct.html#method-i-delete_field","(name, &block)","<p>Removes the named field from the object and returns the value the field contained if it was defined. …\n"],["dig","OpenStruct","OpenStruct.html#method-i-dig","(name, *names)","<p>Finds and returns the object in nested objects that is specified by <code>name</code> and <code>identifiers</code>. The nested …\n"],["each_pair","OpenStruct","OpenStruct.html#method-i-each_pair","()","<p>Yields all attributes (as symbols) along with the corresponding values or returns an enumerator if no …\n"],["eql?","OpenStruct","OpenStruct.html#method-i-eql-3F","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is eql? to <code>other</code> when <code>other</code> is an OpenStruct …\n"],["freeze","OpenStruct","OpenStruct.html#method-i-freeze","()",""],["inspect","OpenStruct","OpenStruct.html#method-i-inspect","()","<p>Returns a string containing a detailed summary of the keys and values.\n"],["new","OpenStruct","OpenStruct.html#method-c-new","(hash=nil)","<p>Creates a new OpenStruct object.  By default, the resulting OpenStruct object will have no attributes. …\n"],["set_ostruct_member_value!","OpenStruct","OpenStruct.html#method-i-set_ostruct_member_value-21","(name, value)",""],["to_h","OpenStruct","OpenStruct.html#method-i-to_h","(&block)",""],["to_s","OpenStruct","OpenStruct.html#method-i-to_s","()",""]]}}