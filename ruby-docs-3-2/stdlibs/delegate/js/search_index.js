var search_data = {"index":{"searchIndex":["delegator","object","simpledelegator","!()","!=()","==()","delegateclass()","__getobj__()","__getobj__()","__raise__()","__setobj__()","__setobj__()","eql?()","freeze()","marshal_dump()","marshal_load()","method_missing()","methods()","new()","protected_methods()","public_methods()","raise()","respond_to_missing?()","target_respond_to?()"],"longSearchIndex":["delegator","object","simpledelegator","delegator#!()","delegator#!=()","delegator#==()","object#delegateclass()","delegator#__getobj__()","simpledelegator#__getobj__()","delegator#__raise__()","delegator#__setobj__()","simpledelegator#__setobj__()","delegator#eql?()","delegator#freeze()","delegator#marshal_dump()","delegator#marshal_load()","delegator#method_missing()","delegator#methods()","delegator::new()","delegator#protected_methods()","delegator#public_methods()","delegator#raise()","delegator#respond_to_missing?()","delegator#target_respond_to?()"],"info":[["Delegator","","Delegator.html","","<p>This library provides three different ways to delegate method calls to an object.  The easiest to use …\n"],["Object","","Object.html","",""],["SimpleDelegator","","SimpleDelegator.html","","<p>A concrete implementation of Delegator, this class provides the means to delegate all supported method …\n"],["!","Delegator","Delegator.html#method-i-21","()","<p>Delegates ! to the _<em>getobj</em>_\n"],["!=","Delegator","Delegator.html#method-i-21-3D","(obj)","<p>Returns true if two objects are not considered of equal value.\n"],["==","Delegator","Delegator.html#method-i-3D-3D","(obj)","<p>Returns true if two objects are considered of equal value.\n"],["DelegateClass","Object","Object.html#method-i-DelegateClass","(superclass, &block)","<p>The primary interface to this library.  Use to setup delegation when defining your class.\n\n<pre>class MyClass ...</pre>\n"],["__getobj__","Delegator","Delegator.html#method-i-__getobj__","()","<p>This method must be overridden by subclasses and should return the object method calls are being delegated …\n"],["__getobj__","SimpleDelegator","SimpleDelegator.html#method-i-__getobj__","()","<p>Returns the current object method calls are being delegated to.\n"],["__raise__","Delegator","Delegator.html#method-i-__raise__","",""],["__setobj__","Delegator","Delegator.html#method-i-__setobj__","(obj)","<p>This method must be overridden by subclasses and change the object delegate to <em>obj</em>.\n"],["__setobj__","SimpleDelegator","SimpleDelegator.html#method-i-__setobj__","(obj)","<p>Changes the delegate object to <em>obj</em>.\n<p>It’s important to note that this does <strong>not</strong> cause SimpleDelegator’s …\n"],["eql?","Delegator","Delegator.html#method-i-eql-3F","(obj)","<p>Returns true if two objects are considered of equal value.\n"],["freeze","Delegator","Delegator.html#method-i-freeze","()","<p>:method: freeze Freeze both the object returned by _<em>getobj</em>_ and self.\n"],["marshal_dump","Delegator","Delegator.html#method-i-marshal_dump","()","<p>Serialization support for the object returned by _<em>getobj</em>_.\n"],["marshal_load","Delegator","Delegator.html#method-i-marshal_load","(data)","<p>Reinitializes delegation from a serialized object.\n"],["method_missing","Delegator","Delegator.html#method-i-method_missing","(m, *args, &block)",""],["methods","Delegator","Delegator.html#method-i-methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this object’s and _<em>getobj</em> …\n"],["new","Delegator","Delegator.html#method-c-new","(obj)","<p>Pass in the <em>obj</em> to delegate method calls to.  All methods supported by <em>obj</em> will be delegated to.\n"],["protected_methods","Delegator","Delegator.html#method-i-protected_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this object’s and _<em>getobj</em> …\n"],["public_methods","Delegator","Delegator.html#method-i-public_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this object’s and _<em>getobj</em> …\n"],["raise","Delegator","Delegator.html#method-i-raise","","<p>Use #__raise__ if your Delegator does not have a object to delegate the #raise method call.\n"],["respond_to_missing?","Delegator","Delegator.html#method-i-respond_to_missing-3F","(m, include_private)","<p>Checks for a method provided by this the delegate object by forwarding the call through _<em>getobj</em>_.\n"],["target_respond_to?","Delegator","Delegator.html#method-i-target_respond_to-3F","(target, m, include_private)","<p>Handle BasicObject instances\n"]]}}