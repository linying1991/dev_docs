var search_data = {"index":{"searchIndex":["oleproperty","object","win32ole","event","method","param","record","type","typelib","variant","variable","variant","win32olequeryinterfaceerror","win32oleruntimeerror","[]()","[]()","[]()","[]=()","[]=()","[]=()","_getproperty()","_invoke()","_setproperty()","array()","codepage()","codepage=()","connect()","const_load()","create_guid()","default()","default_event_sources()","default_ole_types()","dispid()","each()","event?()","event_interface()","guid()","guid()","handler()","handler=()","helpcontext()","helpcontext()","helpfile()","helpfile()","helpstring()","helpstring()","implemented_ole_types()","input?()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","invkind()","invoke()","invoke_kind()","library_name()","locale()","locale=()","major_version()","major_version()","message_loop()","method_missing()","method_missing()","methods()","minor_version()","minor_version()","name()","name()","name()","name()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","off_event()","offset_vtbl()","ole_activex_initialize()","ole_classes()","ole_classes()","ole_free()","ole_free()","ole_func_methods()","ole_get_methods()","ole_instance_variable_get()","ole_instance_variable_set()","ole_method()","ole_method_help()","ole_methods()","ole_methods()","ole_methods_safely()","ole_obj_help()","ole_put_methods()","ole_query_interface()","ole_reference_count()","ole_respond_to?()","ole_show_help()","ole_type()","ole_type()","ole_type()","ole_type()","ole_type_detail()","ole_type_detail()","ole_typelib()","ole_typelib()","ole_types()","on_event()","on_event_with_outargs()","optional?()","output?()","params()","path()","progid()","progids()","return_type()","return_type_detail()","return_vtype()","retval?()","setproperty()","size_opt_params()","size_params()","source_ole_types()","src_type()","to_h()","to_s()","to_s()","to_s()","to_s()","to_s()","typekind()","typelibs()","typelibs()","typename()","unadvise()","value()","value()","value=()","variable_kind()","variables()","varkind()","vartype()","version()","visible?()","visible?()","visible?()","visible?()"],"longSearchIndex":["oleproperty","object","win32ole","win32ole::event","win32ole::method","win32ole::param","win32ole::record","win32ole::type","win32ole::typelib","win32ole::variant","win32ole::variable","win32ole::variant","win32olequeryinterfaceerror","win32oleruntimeerror","oleproperty#[]()","win32ole#[]()","win32ole::variant#[]()","oleproperty#[]=()","win32ole#[]=()","win32ole::variant#[]=()","win32ole#_getproperty()","win32ole#_invoke()","win32ole#_setproperty()","win32ole::variant::array()","win32ole::codepage()","win32ole::codepage=()","win32ole::connect()","win32ole::const_load()","win32ole::create_guid()","win32ole::param#default()","win32ole::type#default_event_sources()","win32ole::type#default_ole_types()","win32ole::method#dispid()","win32ole#each()","win32ole::method#event?()","win32ole::method#event_interface()","win32ole::type#guid()","win32ole::typelib#guid()","win32ole::event#handler()","win32ole::event#handler=()","win32ole::method#helpcontext()","win32ole::type#helpcontext()","win32ole::method#helpfile()","win32ole::type#helpfile()","win32ole::method#helpstring()","win32ole::type#helpstring()","win32ole::type#implemented_ole_types()","win32ole::param#input?()","win32ole::method#inspect()","win32ole::param#inspect()","win32ole::record#inspect()","win32ole::type#inspect()","win32ole::typelib#inspect()","win32ole::variable#inspect()","win32ole::method#invkind()","win32ole#invoke()","win32ole::method#invoke_kind()","win32ole::typelib#library_name()","win32ole::locale()","win32ole::locale=()","win32ole::type#major_version()","win32ole::typelib#major_version()","win32ole::event::message_loop()","win32ole#method_missing()","win32ole::record#method_missing()","win32ole#methods()","win32ole::type#minor_version()","win32ole::typelib#minor_version()","win32ole::method#name()","win32ole::param#name()","win32ole::type#name()","win32ole::typelib#name()","win32ole::variable#name()","oleproperty::new()","win32ole::new()","win32ole::event::new()","win32ole::method::new()","win32ole::param::new()","win32ole::record::new()","win32ole::type::new()","win32ole::typelib::new()","win32ole::variant::new()","win32ole::event#off_event()","win32ole::method#offset_vtbl()","win32ole#ole_activex_initialize()","win32ole::type::ole_classes()","win32ole::typelib#ole_classes()","win32ole::ole_free()","win32ole#ole_free()","win32ole#ole_func_methods()","win32ole#ole_get_methods()","win32ole::record#ole_instance_variable_get()","win32ole::record#ole_instance_variable_set()","win32ole#ole_method()","win32ole#ole_method_help()","win32ole#ole_methods()","win32ole::type#ole_methods()","win32ole#ole_methods_safely()","win32ole#ole_obj_help()","win32ole#ole_put_methods()","win32ole#ole_query_interface()","win32ole::ole_reference_count()","win32ole#ole_respond_to?()","win32ole::ole_show_help()","win32ole#ole_type()","win32ole::param#ole_type()","win32ole::type#ole_type()","win32ole::variable#ole_type()","win32ole::param#ole_type_detail()","win32ole::variable#ole_type_detail()","win32ole#ole_typelib()","win32ole::type#ole_typelib()","win32ole::typelib#ole_types()","win32ole::event#on_event()","win32ole::event#on_event_with_outargs()","win32ole::param#optional?()","win32ole::param#output?()","win32ole::method#params()","win32ole::typelib#path()","win32ole::type#progid()","win32ole::type::progids()","win32ole::method#return_type()","win32ole::method#return_type_detail()","win32ole::method#return_vtype()","win32ole::param#retval?()","win32ole#setproperty()","win32ole::method#size_opt_params()","win32ole::method#size_params()","win32ole::type#source_ole_types()","win32ole::type#src_type()","win32ole::record#to_h()","win32ole::method#to_s()","win32ole::param#to_s()","win32ole::type#to_s()","win32ole::typelib#to_s()","win32ole::variable#to_s()","win32ole::type#typekind()","win32ole::type::typelibs()","win32ole::typelib::typelibs()","win32ole::record#typename()","win32ole::event#unadvise()","win32ole::variable#value()","win32ole::variant#value()","win32ole::variant#value=()","win32ole::variable#variable_kind()","win32ole::type#variables()","win32ole::variable#varkind()","win32ole::variant#vartype()","win32ole::typelib#version()","win32ole::method#visible?()","win32ole::type#visible?()","win32ole::typelib#visible?()","win32ole::variable#visible?()"],"info":[["OLEProperty","","OLEProperty.html","","<p>OLEProperty helper class of Property with arguments.\n"],["Object","","Object.html","",""],["WIN32OLE","","WIN32OLE.html","","<p>WIN32OLE\n<p><code>WIN32OLE</code> objects represent OLE Automation object in Ruby.\n<p>By using WIN32OLE, you can access OLE …\n"],["WIN32OLE::Event","","WIN32OLE/Event.html","",""],["WIN32OLE::Method","","WIN32OLE/Method.html","",""],["WIN32OLE::Param","","WIN32OLE/Param.html","",""],["WIN32OLE::Record","","WIN32OLE/Record.html","",""],["WIN32OLE::Type","","WIN32OLE/Type.html","",""],["WIN32OLE::Typelib","","WIN32OLE/Typelib.html","",""],["WIN32OLE::VARIANT","","WIN32OLE/VARIANT.html","","<p>The WIN32OLE::VARIANT module includes constants of VARIANT type constants. The constants is used when …\n"],["WIN32OLE::Variable","","WIN32OLE/Variable.html","",""],["WIN32OLE::Variant","","WIN32OLE/Variant.html","",""],["WIN32OLEQueryInterfaceError","","WIN32OLEQueryInterfaceError.html","",""],["WIN32OLERuntimeError","","WIN32OLERuntimeError.html","","<p>Raised when OLE processing failed.\n<p>EX:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">obj</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;NonExistProgID&quot;</span>)\n</pre>\n"],["[]","OLEProperty","OLEProperty.html#method-i-5B-5D","(*args)",""],["[]","WIN32OLE","WIN32OLE.html#method-i-5B-5D","(*args)","<p>Returns the value of Collection specified by a1, a2,.…\n\n<pre>dict = WIN32OLE.new(&#39;Scripting.Dictionary&#39;)\ndict.add(&#39;ruby&#39;, ...</pre>\n"],["[]","WIN32OLE::Variant","WIN32OLE/Variant.html#method-i-5B-5D","(*args)","<p>Returns the element of WIN32OLE_VARIANT object(OLE array). This method is available only when the variant …\n"],["[]=","OLEProperty","OLEProperty.html#method-i-5B-5D-3D","(*args)",""],["[]=","WIN32OLE","WIN32OLE.html#method-i-5B-5D-3D","(*args)","<p>Sets the value to WIN32OLE object specified by a1, a2, …\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">dict</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Scripting.Dictionary&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["[]=","WIN32OLE::Variant","WIN32OLE/Variant.html#method-i-5B-5D-3D","(*args)","<p>Set the element of WIN32OLE_VARIANT object(OLE array) to val. This method is available only when the …\n"],["_getproperty","WIN32OLE","WIN32OLE.html#method-i-_getproperty","(p1, p2, p3)","<p>Runs the early binding method to get property. The 1st argument specifies dispatch ID, the 2nd argument …\n"],["_invoke","WIN32OLE","WIN32OLE.html#method-i-_invoke","(p1, p2, p3)","<p>Runs the early binding method. The 1st argument specifies dispatch ID, the 2nd argument specifies the …\n"],["_setproperty","WIN32OLE","WIN32OLE.html#method-i-_setproperty","(p1, p2, p3)","<p>Runs the early binding method to set property. The 1st argument specifies dispatch ID, the 2nd argument …\n"],["array","WIN32OLE::Variant","WIN32OLE/Variant.html#method-c-array","(p1, p2)","<p>Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY. The first argument should be …\n"],["codepage","WIN32OLE","WIN32OLE.html#method-c-codepage","()","<p>Returns current codepage.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">codepage</span> <span class=\"ruby-comment\"># =&gt; WIN32OLE::CP_ACP</span>\n</pre>\n"],["codepage=","WIN32OLE","WIN32OLE.html#method-c-codepage-3D","(p1)","<p>Sets current codepage. The WIN32OLE.codepage is initialized according to Encoding.default_internal.  …\n"],["connect","WIN32OLE","WIN32OLE.html#method-c-connect","(p1, *args)","<p>Returns running OLE Automation object or WIN32OLE object from moniker. 1st argument should be OLE program …\n"],["const_load","WIN32OLE","WIN32OLE.html#method-c-const_load","(p1, p2 = v2)","<p>Defines the constants of OLE Automation server as mod’s constants. The first argument is WIN32OLE …\n"],["create_guid","WIN32OLE","WIN32OLE.html#method-c-create_guid","()","<p>Creates GUID.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">create_guid</span> <span class=\"ruby-comment\"># =&gt; {1CB530F1-F6B1-404D-BCE6-1959BF91F4A8}</span>\n</pre>\n"],["default","WIN32OLE::Param","WIN32OLE/Param.html#method-i-default","()","<p>Returns default value. If the default value does not exist, this method returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["default_event_sources","WIN32OLE::Type","WIN32OLE/Type.html#method-i-default_event_sources","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having …\n"],["default_ole_types","WIN32OLE::Type","WIN32OLE/Type.html#method-i-default_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having …\n"],["dispid","WIN32OLE::Method","WIN32OLE/Method.html#method-i-dispid","()","<p>Returns dispatch ID.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbooks&#39;</span>)\n<span class=\"ruby-identifier\">method</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["each","WIN32OLE","WIN32OLE.html#method-i-each","()","<p>Iterates over each item of OLE collection which has IEnumVARIANT interface.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Excel.Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["event?","WIN32OLE::Method","WIN32OLE/Method.html#method-i-event-3F","()","<p>Returns true if the method is event.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbook&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["event_interface","WIN32OLE::Method","WIN32OLE/Method.html#method-i-event_interface","()","<p>Returns event interface name if the method is event.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object ...</pre>\n"],["guid","WIN32OLE::Type","WIN32OLE/Type.html#method-i-guid","()","<p>Returns GUID.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Application&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">tobj</span>.<span class=\"ruby-identifier\">guid</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["guid","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-guid","()","<p>Returns guid string which specifies type library.\n\n<pre>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object ...</pre>\n"],["handler","WIN32OLE::Event","WIN32OLE/Event.html#method-i-handler","()","<p>returns handler object.\n"],["handler=","WIN32OLE::Event","WIN32OLE/Event.html#method-i-handler-3D","(p1)","<p>sets event handler object. If handler object has onXXX method according to XXX event, then onXXX method …\n"],["helpcontext","WIN32OLE::Method","WIN32OLE/Method.html#method-i-helpcontext","()","<p>Returns help context.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbooks&#39;</span>)\n<span class=\"ruby-identifier\">method</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["helpcontext","WIN32OLE::Type","WIN32OLE/Type.html#method-i-helpcontext","()","<p>Returns helpcontext. If helpcontext is not found, then returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["helpfile","WIN32OLE::Method","WIN32OLE/Method.html#method-i-helpfile","()","<p>Returns help file. If help file is not found, then the method returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["helpfile","WIN32OLE::Type","WIN32OLE/Type.html#method-i-helpfile","()","<p>Returns helpfile path. If helpfile is not found, then returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["helpstring","WIN32OLE::Method","WIN32OLE/Method.html#method-i-helpstring","()","<p>Returns help string of OLE method. If the help string is not found, then the method returns nil.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["helpstring","WIN32OLE::Type","WIN32OLE/Type.html#method-i-helpstring","()","<p>Returns help string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Internet Controls&#39;</span>, <span class=\"ruby-string\">&#39;IWebBrowser&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">tobj</span>.<span class=\"ruby-identifier\">helpstring</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["implemented_ole_types","WIN32OLE::Type","WIN32OLE/Type.html#method-i-implemented_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["input?","WIN32OLE::Param","WIN32OLE/Param.html#method-i-input-3F","()","<p>Returns true if the parameter is input.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["inspect","WIN32OLE::Method","WIN32OLE/Method.html#method-i-inspect","()","<p>Returns the method name with class name.\n"],["inspect","WIN32OLE::Param","WIN32OLE/Param.html#method-i-inspect","()","<p>Returns the parameter name with class name. If the parameter has default value, then returns name=value …\n"],["inspect","WIN32OLE::Record","WIN32OLE/Record.html#method-i-inspect","()","<p>Returns the OLE struct name and member name and the value of member\n<p>If COM server in VB.NET ComServer …\n"],["inspect","WIN32OLE::Type","WIN32OLE/Type.html#method-i-inspect","()","<p>Returns the type name with class name.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ie</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;InternetExplorer.Application&#39;</span>)\n<span class=\"ruby-identifier\">ie</span>.<span class=\"ruby-identifier\">ole_type</span>.<span class=\"ruby-identifier\">inspect</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["inspect","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-inspect","()","<p>Returns the type library name with class name.\n\n<pre>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object ...</pre>\n"],["inspect","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-inspect","()","<p>Returns the OLE variable name and the value with class name.\n"],["invkind","WIN32OLE::Method","WIN32OLE/Method.html#method-i-invkind","()","<p>Returns the method invoke kind.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbooks&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["invoke","WIN32OLE","WIN32OLE.html#method-i-invoke","(*args)","<p>Runs OLE method. The first argument specifies the method name of OLE Automation object. The others specify …\n"],["invoke_kind","WIN32OLE::Method","WIN32OLE/Method.html#method-i-invoke_kind","()","<p>Returns the method kind string. The string is “UNKNOWN” or “PROPERTY” or “PROPERTY” …\n"],["library_name","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-library_name","()","<p>Returns library name. If the method fails to access library name, WIN32OLERuntimeError is raised.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["locale","WIN32OLE","WIN32OLE.html#method-c-locale","()","<p>Returns current locale id (lcid). The default locale is WIN32OLE::LOCALE_SYSTEM_DEFAULT.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">lcid</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">locale</span>\n</pre>\n"],["locale=","WIN32OLE","WIN32OLE.html#method-c-locale-3D","(p1)","<p>Sets current locale id (lcid).\n\n<pre>WIN32OLE.locale = 1033 # set locale English(U.S)\nobj = WIN32OLE_VARIANT.new(&quot;$100,000&quot;, ...</pre>\n"],["major_version","WIN32OLE::Type","WIN32OLE/Type.html#method-i-major_version","()","<p>Returns major version.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Word 10.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Documents&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["major_version","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-major_version","()","<p>Returns the type library major version.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["message_loop","WIN32OLE::Event","WIN32OLE/Event.html#method-c-message_loop","()","<p>Translates and dispatches Windows message.\n"],["method_missing","WIN32OLE","WIN32OLE.html#method-i-method_missing","(*args)","<p>Calls WIN32OLE#invoke method.\n"],["method_missing","WIN32OLE::Record","WIN32OLE/Record.html#method-i-method_missing","(*args)","<p>Returns value specified by the member name of VT_RECORD OLE variable. Or sets value specified by the …\n"],["methods","WIN32OLE","WIN32OLE.html#method-i-methods","(*args)","<p>By overriding Object#methods, WIN32OLE might work well with did_you_mean gem. This is experimental.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["minor_version","WIN32OLE::Type","WIN32OLE/Type.html#method-i-minor_version","()","<p>Returns minor version.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Word 10.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Documents&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["minor_version","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-minor_version","()","<p>Returns the type library minor version.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["name","WIN32OLE::Method","WIN32OLE/Method.html#method-i-name","()","<p>Returns the name of the method.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbook&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["name","WIN32OLE::Param","WIN32OLE/Param.html#method-i-name","()","<p>Returns name.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;)\nmethod = WIN32OLE_METHOD.new(tobj, ...</pre>\n"],["name","WIN32OLE::Type","WIN32OLE/Type.html#method-i-name","()","<p>Returns OLE type name.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Application&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["name","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-name","()","<p>Returns the type library name.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>)\n<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["name","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-name","()","<p>Returns the name of variable.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;XlSheetType&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["new","OLEProperty","OLEProperty.html#method-c-new","(obj, dispid, gettypes, settypes)",""],["new","WIN32OLE","WIN32OLE.html#method-c-new","(p1, p2 = v2, *args, p4 = {})","<p>Returns a new WIN32OLE object(OLE Automation object). The first argument server specifies OLE Automation …\n"],["new","WIN32OLE::Event","WIN32OLE/Event.html#method-c-new","(*args)","<p>Returns OLE event object. The first argument specifies WIN32OLE object. The second argument specifies …\n"],["new","WIN32OLE::Method","WIN32OLE/Method.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_METHOD object which represents the information about OLE method. The first argument …\n"],["new","WIN32OLE::Param","WIN32OLE/Param.html#method-c-new","(p1, p2)","<p>Returns WIN32OLE_PARAM object which represents OLE parameter information. 1st argument should be WIN32OLE_METHOD …\n"],["new","WIN32OLE::Record","WIN32OLE/Record.html#method-c-new","(p1, p2)","<p>Returns WIN32OLE_RECORD object. The first argument is struct name (String or Symbol). The second parameter …\n"],["new","WIN32OLE::Type","WIN32OLE/Type.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_TYPE object. The first argument <em>typelib</em> specifies OLE type library name. The second …\n"],["new","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-c-new","(*args)","<p>Returns a new WIN32OLE_TYPELIB object.\n<p>The first argument <em>typelib</em>  specifies OLE type library name or …\n"],["new","WIN32OLE::Variant","WIN32OLE/Variant.html#method-c-new","(*args)","<p>Returns Ruby object wrapping OLE variant. The first argument specifies Ruby object to convert OLE variant …\n"],["off_event","WIN32OLE::Event","WIN32OLE/Event.html#method-i-off_event","(p1 = v1)","<p>removes the callback of event.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ie</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;InternetExplorer.Application&#39;</span>)\n<span class=\"ruby-identifier\">ev</span> = <span class=\"ruby-constant\">WIN32OLE_EVENT</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-identifier\">ie</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["offset_vtbl","WIN32OLE::Method","WIN32OLE/Method.html#method-i-offset_vtbl","()","<p>Returns the offset ov VTBL.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbooks&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_activex_initialize","WIN32OLE","WIN32OLE.html#method-i-ole_activex_initialize","()","<p>Initialize WIN32OLE object(ActiveX Control) by calling IPersistMemory::InitNew.\n<p>Before calling OLE method, …\n"],["ole_classes","WIN32OLE::Type","WIN32OLE/Type.html#method-c-ole_classes","(p1)","<p>Returns array of WIN32OLE_TYPE objects defined by the <em>typelib</em> type library. This method will be OBSOLETE …\n"],["ole_classes","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-ole_classes","()","<p>Returns the type library file path.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_free","WIN32OLE","WIN32OLE.html#method-c-ole_free","(p1)","<p>Invokes Release method of Dispatch interface of WIN32OLE object. You should not use this method because …\n"],["ole_free","WIN32OLE","WIN32OLE.html#method-i-ole_free","()","<p>invokes Release method of Dispatch interface of WIN32OLE object. Usually, you do not need to call this …\n"],["ole_func_methods","WIN32OLE","WIN32OLE.html#method-i-ole_func_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is property (settable) of WIN32OLE …\n"],["ole_get_methods","WIN32OLE","WIN32OLE.html#method-i-ole_get_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is property (gettable) of WIN32OLE …\n"],["ole_instance_variable_get","WIN32OLE::Record","WIN32OLE/Record.html#method-i-ole_instance_variable_get","(p1)","<p>Returns value specified by the member name of VT_RECORD OLE object. If the member name is not correct, …\n"],["ole_instance_variable_set","WIN32OLE::Record","WIN32OLE/Record.html#method-i-ole_instance_variable_set","(p1, p2)","<p>Sets value specified by the member name of VT_RECORD OLE object. If the member name is not correct,  …\n"],["ole_method","WIN32OLE","WIN32OLE.html#method-i-ole_method","(p1)","<p>Returns WIN32OLE_METHOD object corresponding with method specified by 1st argument.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Excel.Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_method_help","WIN32OLE","WIN32OLE.html#method-i-ole_method_help","(p1)","<p>Returns WIN32OLE_METHOD object corresponding with method specified by 1st argument.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Excel.Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_methods","WIN32OLE","WIN32OLE.html#method-i-ole_methods","()","<p>Returns the array of WIN32OLE_METHOD object. The element is OLE method of WIN32OLE object.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Excel.Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_methods","WIN32OLE::Type","WIN32OLE/Type.html#method-i-ole_methods","()","<p>Returns array of WIN32OLE_METHOD objects which represent OLE method defined in OLE type library.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_methods_safely","WIN32OLE","WIN32OLE.html#method-i-ole_methods_safely","()",""],["ole_obj_help","WIN32OLE","WIN32OLE.html#method-i-ole_obj_help","()","<p>Returns WIN32OLE_TYPE object.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Excel.Application&#39;</span>)\n<span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-identifier\">excel</span>.<span class=\"ruby-identifier\">ole_type</span>\n</pre>\n"],["ole_put_methods","WIN32OLE","WIN32OLE.html#method-i-ole_put_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is property (settable) of WIN32OLE …\n"],["ole_query_interface","WIN32OLE","WIN32OLE.html#method-i-ole_query_interface","(p1)","<p>Returns WIN32OLE object for a specific dispatch or dual interface specified by iid.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ie</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;InternetExplorer.Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_reference_count","WIN32OLE","WIN32OLE.html#method-c-ole_reference_count","(p1)","<p>Returns reference counter of Dispatch interface of WIN32OLE object. You should not use this method because …\n"],["ole_respond_to?","WIN32OLE","WIN32OLE.html#method-i-ole_respond_to-3F","(p1)","<p>Returns true when OLE object has OLE method, otherwise returns false.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ie</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;InternetExplorer.Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_show_help","WIN32OLE","WIN32OLE.html#method-c-ole_show_help","(p1, p2 = v2)","<p>Displays helpfile. The 1st argument specifies WIN32OLE_TYPE object or WIN32OLE_METHOD object or helpfile. …\n"],["ole_type","WIN32OLE","WIN32OLE.html#method-i-ole_type","()","<p>Returns WIN32OLE_TYPE object.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> = <span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Excel.Application&#39;</span>)\n<span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-identifier\">excel</span>.<span class=\"ruby-identifier\">ole_type</span>\n</pre>\n"],["ole_type","WIN32OLE::Param","WIN32OLE/Param.html#method-i-ole_type","()","<p>Returns OLE type of WIN32OLE_PARAM object(parameter of OLE method).\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["ole_type","WIN32OLE::Type","WIN32OLE/Type.html#method-i-ole_type","()","<p>returns type of OLE class.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Application&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_type","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-ole_type","()","<p>Returns OLE type string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;XlSheetType&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ole_type_detail","WIN32OLE::Param","WIN32OLE/Param.html#method-i-ole_type_detail","()","<p>Returns detail information of type of argument.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["ole_type_detail","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-ole_type_detail","()","<p>Returns detail information of type. The information is array of type.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;DirectX ...</pre>\n"],["ole_typelib","WIN32OLE","WIN32OLE.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object. The object represents the type library which contains the WIN32OLE …\n"],["ole_typelib","WIN32OLE::Type","WIN32OLE/Type.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE object. If it is not found, …\n"],["ole_types","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-ole_types","()","<p>Returns the type library file path.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["on_event","WIN32OLE::Event","WIN32OLE/Event.html#method-i-on_event","(*args)","<p>Defines the callback event. If argument is omitted, this method defines the callback of all events.  …\n"],["on_event_with_outargs","WIN32OLE::Event","WIN32OLE/Event.html#method-i-on_event_with_outargs","(*args)","<p>Defines the callback of event. If you want modify argument in callback, you could use this method instead …\n"],["optional?","WIN32OLE::Param","WIN32OLE/Param.html#method-i-optional-3F","()","<p>Returns true if argument is optional.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbook&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["output?","WIN32OLE::Param","WIN32OLE/Param.html#method-i-output-3F","()","<p>Returns true if argument is output.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Internet Controls&#39;</span>, <span class=\"ruby-string\">&#39;DWebBrowserEvents&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["params","WIN32OLE::Method","WIN32OLE/Method.html#method-i-params","()","<p>returns array of WIN32OLE_PARAM object corresponding with method parameters.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["path","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-path","()","<p>Returns the type library file path.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["progid","WIN32OLE::Type","WIN32OLE/Type.html#method-i-progid","()","<p>Returns ProgID if it exists. If not found, then returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel ...</pre>\n"],["progids","WIN32OLE::Type","WIN32OLE/Type.html#method-c-progids","()","<p>Returns array of ProgID.\n"],["return_type","WIN32OLE::Method","WIN32OLE/Method.html#method-i-return_type","()","<p>Returns string of return value type of method.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["return_type_detail","WIN32OLE::Method","WIN32OLE/Method.html#method-i-return_type_detail","()","<p>Returns detail information of return value type of method. The information is array.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["return_vtype","WIN32OLE::Method","WIN32OLE/Method.html#method-i-return_vtype","()","<p>Returns number of return value type of method.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["retval?","WIN32OLE::Param","WIN32OLE/Param.html#method-i-retval-3F","()","<p>Returns true if argument is return value.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;DirectX 7 for Visual Basic Type Library&#39;, ...</pre>\n"],["setproperty","WIN32OLE","WIN32OLE.html#method-i-setproperty","(*args)","<p>Sets property of OLE object. When you want to set property with argument, you can use this method.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">excel</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["size_opt_params","WIN32OLE::Method","WIN32OLE/Method.html#method-i-size_opt_params","()","<p>Returns the size of optional parameters.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["size_params","WIN32OLE::Method","WIN32OLE/Method.html#method-i-size_params","()","<p>Returns the size of arguments of the method.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["source_ole_types","WIN32OLE::Type","WIN32OLE/Type.html#method-i-source_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having …\n"],["src_type","WIN32OLE::Type","WIN32OLE/Type.html#method-i-src_type","()","<p>Returns source class when the OLE class is ‘Alias’.\n\n<pre>tobj =  WIN32OLE_TYPE.new(&#39;Microsoft Office ...</pre>\n"],["to_h","WIN32OLE::Record","WIN32OLE/Record.html#method-i-to_h","()","<p>Returns Ruby Hash object which represents VT_RECORD variable. The keys of Hash object are member names …\n"],["to_s","WIN32OLE::Method","WIN32OLE/Method.html#method-i-to_s","()","<p>Returns the name of the method.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbook&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["to_s","WIN32OLE::Param","WIN32OLE/Param.html#method-i-to_s","()","<p>Returns name.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;)\nmethod = WIN32OLE_METHOD.new(tobj, ...</pre>\n"],["to_s","WIN32OLE::Type","WIN32OLE/Type.html#method-i-to_s","()","<p>Returns OLE type name.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Application&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["to_s","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-to_s","()","<p>Returns the type library name.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>)\n<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["to_s","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-to_s","()","<p>Returns the name of variable.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;XlSheetType&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["typekind","WIN32OLE::Type","WIN32OLE/Type.html#method-i-typekind","()","<p>Returns number which represents type.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Word 10.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Documents&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["typelibs","WIN32OLE::Type","WIN32OLE/Type.html#method-c-typelibs","()","<p>Returns array of type libraries. This method will be OBSOLETE. Use WIN32OLE_TYPELIB.typelibs.collect{|t| …\n"],["typelibs","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-c-typelibs","()","<p>Returns the array of WIN32OLE_TYPELIB object.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlibs</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">typelibs</span>\n</pre>\n"],["typename","WIN32OLE::Record","WIN32OLE/Record.html#method-i-typename","()","<p>Returns the type name of VT_RECORD OLE variable.\n<p>If COM server in VB.NET ComServer project is the following: …\n"],["unadvise","WIN32OLE::Event","WIN32OLE/Event.html#method-i-unadvise","()","<p>disconnects OLE server. If this method called, then the WIN32OLE_EVENT object does not receive the OLE …\n"],["value","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-value","()","<p>Returns value if value is exists. If the value does not exist, this method returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["value","WIN32OLE::Variant","WIN32OLE/Variant.html#method-i-value","()","<p>Returns Ruby object value from OLE variant.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">obj</span> = <span class=\"ruby-constant\">WIN32OLE_VARIANT</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">1</span>, <span class=\"ruby-constant\">WIN32OLE</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">VARIANT</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">VT_BSTR</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["value=","WIN32OLE::Variant","WIN32OLE/Variant.html#method-i-value-3D","(p1)","<p>Sets variant value to val. If the val type does not match variant value type(vartype), then val is changed …\n"],["variable_kind","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-variable_kind","()","<p>Returns variable kind string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;XlSheetType&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["variables","WIN32OLE::Type","WIN32OLE/Type.html#method-i-variables","()","<p>Returns array of WIN32OLE_VARIABLE objects which represent variables defined in OLE class.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</pre>\n"],["varkind","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-varkind","()","<p>Returns the number which represents variable kind.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object ...</pre>\n"],["vartype","WIN32OLE::Variant","WIN32OLE/Variant.html#method-i-vartype","()","<p>Returns OLE variant type.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">obj</span> = <span class=\"ruby-constant\">WIN32OLE_VARIANT</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;string&quot;</span>)\n<span class=\"ruby-identifier\">obj</span>.<span class=\"ruby-identifier\">vartype</span> <span class=\"ruby-comment\"># =&gt; WIN32OLE::VARIANT::VT_BSTR</span>\n</pre>\n"],["version","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-version","()","<p>Returns the type library version.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tlib</span> = <span class=\"ruby-constant\">WIN32OLE_TYPELIB</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>)\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["visible?","WIN32OLE::Method","WIN32OLE/Method.html#method-i-visible-3F","()","<p>Returns true if the method is public.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tobj</span> = <span class=\"ruby-constant\">WIN32OLE_TYPE</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Microsoft Excel 9.0 Object Library&#39;</span>, <span class=\"ruby-string\">&#39;Workbooks&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["visible?","WIN32OLE::Type","WIN32OLE/Type.html#method-i-visible-3F","()","<p>Returns true if the OLE class is public.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"],["visible?","WIN32OLE::Typelib","WIN32OLE/Typelib.html#method-i-visible-3F","()","<p>Returns true if the type library information is not hidden. If wLibFlags of TLIBATTR is 0 or LIBFLAG_FRESTRICTED …\n"],["visible?","WIN32OLE::Variable","WIN32OLE/Variable.html#method-i-visible-3F","()","<p>Returns true if the variable is public.\n\n<pre>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</pre>\n"]]}}