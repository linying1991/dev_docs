var search_data = {"index":{"searchIndex":["etc","group","passwd","io","object","c_str()","confstr()","each()","each()","each_const()","each_name()","endgrent()","endpwent()","getgrent()","getgrgid()","getgrnam()","getlogin()","getpwent()","getpwnam()","getpwuid()","group()","nprocessors()","passwd()","pathconf()","setgrent()","setpwent()","sysconf()","sysconfdir()","systmpdir()","uname()"],"longSearchIndex":["etc","etc::group","etc::passwd","io","object","object#c_str()","etc::confstr()","etc::group::each()","etc::passwd::each()","object#each_const()","object#each_name()","etc::endgrent()","etc::endpwent()","etc::getgrent()","etc::getgrgid()","etc::getgrnam()","etc::getlogin()","etc::getpwent()","etc::getpwnam()","etc::getpwuid()","etc::group()","etc::nprocessors()","etc::passwd()","io#pathconf()","etc::setgrent()","etc::setpwent()","etc::sysconf()","etc::sysconfdir()","etc::systmpdir()","etc::uname()"],"info":[["Etc","","Etc.html","","<p>The Etc module provides access to information typically stored in files in the <code>/etc</code> directory on Unix …\n"],["Etc::Group","","Etc/Group.html","","<p>Group is a placeholder Struct for user group database on Unix systems.\n<p>The struct contains the following …\n"],["Etc::Passwd","","Etc/Passwd.html","","<p>Passwd is a placeholder Struct for user database on Unix systems.\n<p>The struct contains the following members …\n"],["IO","","IO.html","",""],["Object","","Object.html","",""],["c_str","Object","Object.html#method-i-c_str","(str)",""],["confstr","Etc","Etc.html#method-c-confstr","(p1)","<p>Returns system configuration variable using confstr().\n<p><em>name</em> should be a constant under <code>Etc</code> which begins …\n"],["each","Etc::Group","Etc/Group.html#method-c-each","()","<p>Iterates for each entry in the <code>/etc/group</code> file if a block is given.\n<p>If no block is given, returns the …\n"],["each","Etc::Passwd","Etc/Passwd.html#method-c-each","()","<p>Iterates for each entry in the <code>/etc/passwd</code> file if a block is given.\n<p>If no block is given, returns the …\n"],["each_const","Object","Object.html#method-i-each_const","()",""],["each_name","Object","Object.html#method-i-each_name","(pat)",""],["endgrent","Etc","Etc.html#method-c-endgrent","()","<p>Ends the process of scanning through the <code>/etc/group</code> file begun by ::getgrent, and closes the file.\n"],["endpwent","Etc","Etc.html#method-c-endpwent","()","<p>Ends the process of scanning through the <code>/etc/passwd</code> file begun with ::getpwent, and closes the file. …\n"],["getgrent","Etc","Etc.html#method-c-getgrent","()","<p>Returns an entry from the <code>/etc/group</code> file.\n<p>The first time it is called it opens the file and returns the …\n"],["getgrgid","Etc","Etc.html#method-c-getgrgid","(p1 = v1)","<p>Returns information about the group with specified integer <code>group_id</code>, as found in <code>/etc/group</code>.\n<p>The information …\n"],["getgrnam","Etc","Etc.html#method-c-getgrnam","(p1)","<p>Returns information about the group with specified <code>name</code>, as found in <code>/etc/group</code>.\n<p>The information is returned …\n"],["getlogin","Etc","Etc.html#method-c-getlogin","()","<p>Returns the short user name of the currently logged in user. Unfortunately, it is often rather easy to …\n"],["getpwent","Etc","Etc.html#method-c-getpwent","()","<p>Returns an entry from the <code>/etc/passwd</code> file.\n<p>The first time it is called it opens the file and returns …\n"],["getpwnam","Etc","Etc.html#method-c-getpwnam","(p1)","<p>Returns the <code>/etc/passwd</code> information for the user with specified login <code>name</code>.\n<p>The information is returned …\n"],["getpwuid","Etc","Etc.html#method-c-getpwuid","(p1 = v1)","<p>Returns the <code>/etc/passwd</code> information for the user with the given integer <code>uid</code>.\n<p>The information is returned …\n"],["group","Etc","Etc.html#method-c-group","()","<p>Provides a convenient Ruby iterator which executes a block for each entry in the <code>/etc/group</code> file.\n<p>The …\n"],["nprocessors","Etc","Etc.html#method-c-nprocessors","()","<p>Returns the number of online processors.\n<p>The result is intended as the number of processes to use all …\n"],["passwd","Etc","Etc.html#method-c-passwd","()","<p>Provides a convenient Ruby iterator which executes a block for each entry in the <code>/etc/passwd</code> file.\n<p>The …\n"],["pathconf","IO","IO.html#method-i-pathconf","(p1)","<p>Returns pathname configuration variable using fpathconf().\n<p><em>name</em> should be a constant under <code>Etc</code> which begins …\n"],["setgrent","Etc","Etc.html#method-c-setgrent","()","<p>Resets the process of reading the <code>/etc/group</code> file, so that the next call to ::getgrent will return the …\n"],["setpwent","Etc","Etc.html#method-c-setpwent","()","<p>Resets the process of reading the <code>/etc/passwd</code> file, so that the next call to ::getpwent will return the …\n"],["sysconf","Etc","Etc.html#method-c-sysconf","(p1)","<p>Returns system configuration variable using sysconf().\n<p><em>name</em> should be a constant under <code>Etc</code> which begins …\n"],["sysconfdir","Etc","Etc.html#method-c-sysconfdir","()","<p>Returns system configuration directory.\n<p>This is typically <code>&quot;/etc&quot;</code>, but is modified by the prefix …\n"],["systmpdir","Etc","Etc.html#method-c-systmpdir","()","<p>Returns system temporary directory; typically “/tmp”.\n"],["uname","Etc","Etc.html#method-c-uname","()","<p>Returns the system information obtained by uname system call.\n<p>The return value is a hash which has 5 keys …\n"]]}}